<script src="https://cdn.jsdelivr.net/npm/ol@latest/dist/ol.js"></script>
<div class="breadcrumbs">
  <a href="/dashboard/">Dashboard</a> > <a href="/dashboard/devices/">Devices</a> > <a href="/dashboard/devices/add_device/">Add Device</a>
</div>


<script>
  function main_toggleFields() {
    var areaType = document.getElementById("areaType").value;
    var rectangleFields = document.getElementById("rectangleFields");
    var circleFields = document.getElementById("circleFields");

    if (areaType === "Rectangle") {
      rectangleFields.style.display = "block";
      circleFields.style.display = "none";
    } else if (areaType === "Circle") {
      rectangleFields.style.display = "none";
      circleFields.style.display = "block";
    } else {
      rectangleFields.style.display = "none";
      circleFields.style.display = "none";
    }
  }
</script>


<script>
  function toggleFields() {
    var areaType = document.getElementById("areaType").value;
    var rectangleFields = document.getElementById("rectangleFields");
    var circleFields = document.getElementById("circleFields");

    if (areaType === "Rectangle") {
      rectangleFields.style.display = "block";
      circleFields.style.display = "none";
    } else if (areaType === "Circle") {
      rectangleFields.style.display = "none";
      circleFields.style.display = "block";
    } else {
      rectangleFields.style.display = "none";
      circleFields.style.display = "none";
    }
  }
</script>

<body>
  <br> <br>
  <h1 style="color: black; font-weight: bold;">Add New Device</h1>
  <form action="/add-device" method="POST">
    <label for="serialNumber">Serial Number:</label>
    <input type="text" id="serialNumber" name="serialNumber" required>

    <div class="coord_container">
      <div class="column">
        <label for="latitude">Position Latitude:</label><br>
        <input type="number" step="any" id="latitude" name="latitude" required><br>
      </div>
      <div class="column">
        <label for="longitude">Position Longitude:</label><br>
        <input type="number" step="any" id="longitude" name="longitude" required><br><br>
      </div>
    </div>

    <div id="map" class="map">
      <script>
        var map = new ol.Map({
          target: 'map',
          layers: [
            new ol.layer.Tile({
              source: new ol.source.OSM()
            })
          ],
          view: new ol.View({
            center: ol.proj.fromLonLat([114.16, 22.28]), // Centered around Hong Kong
            zoom: 15
          })
        });
      
        var pinStyle = new ol.style.Style({
          image: new ol.style.Icon({
            anchor: [0.5, 1], // Center bottom point of the pin image
            anchorXUnits: 'fraction',
            anchorYUnits: 'fraction',
            src: 'http://maps.gstatic.com/mapfiles/ms2/micons/ltblue-dot.png' // URL of the pin image
          })
        });
      
        var pin = new ol.Feature({
          geometry: new ol.geom.Point(ol.proj.fromLonLat([114.16, 22.28])) // Initial pin location
        });
      
        pin.setStyle(pinStyle);
      
        var pinLayer = new ol.layer.Vector({
          source: new ol.source.Vector({
            features: [pin]
          })
        });
      
        map.addLayer(pinLayer);
      
        var dragInteraction = new ol.interaction.Translate({
          features: new ol.Collection([pin])
        });
      
        map.addInteraction(dragInteraction);
      
        pin.on('change', function () {
          var coordinates = ol.proj.transform(pin.getGeometry().getCoordinates(), 'EPSG:3857', 'EPSG:4326');
          document.getElementById('latitude').value = coordinates[1].toFixed(6);
          document.getElementById('longitude').value = coordinates[0].toFixed(6);
        });
      
        document.getElementById('latitude').addEventListener('input', function () {
          var latitude = parseFloat(this.value);
          var longitude = parseFloat(document.getElementById('longitude').value);
          var newCoordinates = ol.proj.fromLonLat([longitude, latitude]);
          pin.getGeometry().setCoordinates(newCoordinates);
          map.getView().setCenter(newCoordinates);
        });
      
        document.getElementById('longitude').addEventListener('input', function () {
          var longitude = parseFloat(this.value);
          var latitude = parseFloat(document.getElementById('latitude').value);
          var newCoordinates = ol.proj.fromLonLat([longitude, latitude]);
          pin.getGeometry().setCoordinates(newCoordinates);
          map.getView().setCenter(newCoordinates);
        });
      
        // Add padding to zoom and rotation controls
        map.getControls().forEach(function (control) {
          if (control instanceof ol.control.Zoom || control instanceof ol.control.Rotate) {
            control.element.style.padding = '10px';
          }
        });
      
        // Remove attribution control
        map.getControls().forEach(function (control) {
          if (control instanceof ol.control.Attribution) {
            map.removeControl(control);
          }
        });
      </script>

    </div>
    <br>

    <label for="type">Device Type:</label>
    <select id="type" name="type" required>
      <option value="Option 1">Dragino-Water</option>
      <option value="Option 2">SA</option>
      <option value="Option 3">SD3</option>
      <!-- Add more options as needed -->
    </select><br>
    <label for="siteId">Site ID:</label>
    <input type="text" id="siteId" name="siteId" required><br>

    <h3> Define Units </h3><br>
    <label for="velocityUnit">Velocity Unit:</label>
    <input style="width: auto;" type="text" id="velocityUnit" name="velocityUnit" required><br>

    <label for="depthUnit">Depth Unit:</label>
    <input style="width: auto;" type="text" id="depthUnit" name="depthUnit" required><br>

    <label for="rainfallUnit">Rainfall Unit:</label>
    <input style="width: auto;" type="text" id="rainfallUnit" name="rainfallUnit" required><br>

    <label for="flowUnit">Flow Unit:</label>
    <input style="width: auto;" type="text" id="flowUnit" name="flowUnit" required><br>

    <label for="temperatureUnit">Temperature Unit:</label>
    <input style="width: auto;" type="text" id="temperatureUnit" name="temperatureUnit" required><br>

    <label for="pressureUnit">Pressure Unit:</label>
    <input style="width: auto;" type="text" id="pressureUnit" name="pressureUnit" required><br>

    <label for="distanceUnit">Distance Unit:</label>
    <input style="width: auto;" type="text" id="distanceUnit" name="distanceUnit" required><br>

    <label for="signalLevelUnit">Signal Level Unit:</label>
    <input style="width: auto;" type="text" id="signalLevelUnit" name="signalLevelUnit" required><br>

    <label for="waterLevelUnit">Water Level Unit:</label>
    <input style="width: auto;" type="text" id="waterLevelUnit" name="waterLevelUnit" required><br>

    <label for="rssiUnit">RSSI Unit:</label>
    <input style="width: auto;" type="text" id="rssiUnit" name="rssiUnit" required><br>

    <label for="conductivityUnit">Conductivity Unit:</label>
    <input style="width: auto;" type="text" id="conductivityUnit" name="conductivityUnit" required><br>

    <label for="batteryLevelUnit">Battery Level Unit:</label>
    <input style="width: auto;" type="text" id="batteryLevelUnit" name="batteryLevelUnit" required><br>

    <label for="turbidityUnit">Turbidity Unit:</label>
    <input style="width: auto;" type="text" id="turbidityUnit" name="turbidityUnit" required><br>

    <label for="tssUnit">TSS Unit:</label>
    <input style="width: auto;" type="text" id="tssUnit" name="tssUnit" required><br>

    <h3> Set Water Level </h3><br>

    <label for="coverLevel">Cover Level (mPD):</label>
    <input type="number" step="any" id="coverLevel" name="coverLevel" required><br>

    <label for="invertLevel">Invert Level (mPD):</label>
    <input type="number" step="any" id="invertLevel" name="invertLevel" required><br>
    <div class="help">Actual water depth in csv = measured water depth/distance + install sensor H</div>
    <label for="invertLevel">Install sensor H (m):</label>
    <input type="number" step="any" id="invertLevel" name="invertLevel" required><br>
    <div class="help">Actual water depth in csv = measured water depth/distance + install sensor H</div>

    <h3> Details for Area Calculation </h3><br>

    <label for="areaType">Area Type:</label>
    <select id="areaType" name="areaType" onchange="toggleFields()" required>
      <option value="">Select Area Type</option>
      <option value="Rectangle">Rectangle</option>
      <option value="Circle">Circle</option>
    </select><br>

    <div id="rectangleFields" class="hidden">
      <label for="width">Width:</label>
      <input type="number" step="any" id="width" name="width"><br><br>

      <label for="height">Height:</label>
      <input type="number" step="any" id="height" name="height"><br><br>
    </div>

    <div id="circleFields" class="hidden">
      <label for="diameter">Diameter:</label>
      <input type="number" step="any" id="diameter" name="diameter"><br><br>
    </div>

    <h3> Alert User Settings</h3><br>
    <label for="mainWaterAlertLevel">Main Water Alert Level (mPD):</label><br>
    <input type="number" step="any" id="mainWaterAlertLevel" name="mainWaterAlertLevel" required><br><br>

    <label for="secondaryWaterAlertLevel">Secondary Water Alert Level (mPD):</label><br>
    <input type="number" step="any" id="secondaryWaterAlertLevel" name="secondaryWaterAlertLevel" required><br><br>

    <label for="mainWaterAlertActive">Main Water Alert Active:</label>
    <select class="short-input" id="mainWaterAlertActive" name="mainWaterAlertActive" required>
      <option value="Y">Yes</option>
      <option value="N">No</option>
    </select><br>
    <label for="secondaryWaterAlertActive">Secondary Water Alert Active:</label>
    <select class="short-input" id="secondaryWaterAlertActive" name="secondaryWaterAlertActive" required>
      <option value="Y">Yes</option>
      <option value="N">No</option>
    </select><br>

    <hr><br>
    <label for="lowerTurbidityAlertLevel">Lower than Turbidity Alert Level:</label><br>
    <input type="number" step="any" id="lowerTurbidityAlertLevel" name="lowerTurbidityAlertLevel" required><br><br>

    <label for="higherTurbidityAlertLevel">Higher than Turbidity Alert Level:</label><br>
    <input type="number" step="any" id="higherTurbidityAlertLevel" name="higherTurbidityAlertLevel" required><br><br>

    <label for="lowerTSSAlertLevel">Lower than TSS Alert Level:</label><br>
    <input type="number" step="any" id="lowerTSSAlertLevel" name="lowerTSSAlertLevel" required><br><br>

    <label for="higherTSSAlertLevel">Higher than TSS Alert Level:</label><br>
    <input type="number" step="any" id="higherTSSAlertLevel" name="higherTSSAlertLevel" required><br><br>

    <label for="lowerTurbidityAlertActive">Lower than Turbidity Alert Active:</label>
    <select class="short-input" id="lowerTurbidityAlertActive" name="lowerTurbidityAlertActive" required>
      <option value="Y">Yes</option>
      <option value="N">No</option>
    </select><br>

    <label for="lowerTSSAlertActive">Lower than TSS Alert Active:</label>
    <select class="short-input" id="lowerTSSAlertActive" name="lowerTSSAlertActive" required>
      <option value="Y">Yes</option>
      <option value="N">No</option>
    </select><br>

    <label for="higherTurbidityAlertActive">Higher than Turbidity Alert Active:</label>
    <select class="short-input" id="higherTurbidityAlertActive" name="higherTurbidityAlertActive" required>
      <option value="Y">Yes</option>
      <option value="N">No</option>
    </select><br>

    <label for="higherTSSAlertActive">Higher than TSS Alert Active:</label>
    <select class="short-input" id="higherTSSAlertActive" name="higherTSSAlertActive" required>
      <option value="Y">Yes</option>
      <option value="N">No</option>
    </select><br>

    <label for="leakAlertActive">Leak Alert Active:</label>
    <select class="short-input" id="leakAlertActive" name="leakAlertActive" required>
      <option value="Y">Yes</option>
      <option value="N">No</option>
    </select><br>

<button type="submit">Submit</button>
</form>
</body>